import aiohttpfrom aiogram import Bot, Dispatcher, typesfrom aiogram.types import ContentTypefrom aiogram.utils import executorimport loggingimport osBOT_TOKEN = os.getenv("BOT_TOKEN")bot = Bot(token=BOT_TOKEN)dp = Dispatcher(bot)logging.basicConfig(level=logging.INFO)@dp.message_handler(content_types=ContentType.PHOTO)async def handle_photo(message: types.Message):    photo = message.photo[-1]    file = await bot.get_file(photo.file_id)    file_url = f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file.file_path}"    async with aiohttp.ClientSession() as session:        async with session.get(file_url) as resp:            if resp.status != 200:                await message.reply("❌ Не удалось загрузить фото.")                return            file_bytes = await resp.read()        form = aiohttp.FormData()        form.add_field('file', file_bytes, filename='image.jpg', content_type='image/jpeg')        async with session.post('https://telegra.ph/upload', data=form) as response:            result = await response.json()        if 'error' in result:            await message.reply("❌ Ошибка загрузки на telegra.ph.")            return        telegraph_url = 'https://telegra.ph' + result[0]['src']        await message.reply(f"✅ Готово!\n{telegraph_url}")if __name__ == "__main__":    executor.start_polling(dp, skip_updates=True)